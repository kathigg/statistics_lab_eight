# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CfVUrk9qUIutJR6UsYgUvAudrb_FNv-2
"""

import random
x= random.uniform(0, 1)
print(x)

import numpy as np
import matplotlib.pyplot as plt
n = 150000

a = np.random.uniform(0, 1, n)

# Histogram
hist, bins = np.histogram(a, bins = 20)
plt.bar(bins[:-1], hist, width = np.diff(bins), edgecolor = "black")
plt.xlabel("Value")
plt.ylabel("Frequency")
plt.title("Histogram")
plt.show()

# Example 2

u = random.uniform(0, 1)
if u < 0.5:
  a = "Head"
else:
  a = "Tail"
print(a)

# Exercise 1
n = 10000
d = [0] * n # a dummy array of zeroes, of length 10000

for i in range(n):
  u = random.uniform(0, 1)
  if u < 0.6:
    d[i] = "Head"
  else:
    d[i] = "Tail"
print(d)

# Bar chart
'''
Suppose we have a biased coin which turns head 60% of the time. Simulate 10,000 tosses of this
coin and make a bar plot of the outcomes.
'''

import pandas as pd
import matplotlib.pyplot as plt

df = pd.DataFrame(d)
df.value_counts().plot(kind = "bar")
plt.xlabel("Outcome")
plt.ylabel("Frequency")
plt.title("Bar Chart")
plt.show()

# Simulate a Random Walk

u = random.uniform(0, 1)
if (u < 0.2):
  f = "up"
elif u >= 0.2 and u < 0.5:
  f = "down"
elif u >= 0.5 and u < 0.8:
  f = "left"
else:
  f = "right"
print(f)

'''Assume there’s a particle moving in a 2D plane. At each instant of time, the particle:
• moves up with probability 0.2
• moves down with probability 0.3
• moves left with probability 0.3
• moves right with probability 0.2
'''

n = 2000
f = [0]*n
for i in range(n):
  u = random.uniform(0, 1)
  if u < 0.2:
    f[i] = "up"
  elif u >= 0.2 and u < 0.5:
    f[i] = "down"
  elif u >= 0.5 and u < 0.8:
    f[i] = "left"
  else:
    f[i] = "right"
print(f)

df = pd.DataFrame(f)
df.value_counts().plot(kind = "bar")
plt.xlabel("Outcome")
plt.ylabel("Frequency")
plt.title("Bar Chart")
plt.show()

x = [0]*n
y = [0]*n
a = 0
b = 0

for i in range(n):
  if f[i] == "down":
    b = b - 1
  elif f[i] == "left":
    a = a - 1
  elif f[i] == "right":
    a = a + 1
  else:
    b = b + 1
  x[i] = a
  y[i] = b

plt.title("2D Random Walk")
plt.xlabel("x")
plt.ylabel("y")
plt.plot(x, y)
plt.show()